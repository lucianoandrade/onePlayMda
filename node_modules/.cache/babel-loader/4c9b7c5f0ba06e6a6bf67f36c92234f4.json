{"ast":null,"code":"import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\nimport { Auth } from \"aws-amplify\";\nexport default ((type, params) => {\n  if (type === AUTH_LOGIN) {\n    const username = params.username,\n          password = params.password;\n    return Auth.signIn(username, password).then(response => {\n      if (response.status < 200 || response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(async () => {\n      const token = (await Auth.currentSession()).idToken.jwtToken;\n      localStorage.setItem('token', token);\n    }).catch(error => {\n      console.log(\"Erro fazendo login: \", error);\n      throw new Error(error.message);\n    });\n  }\n\n  if (type === AUTH_LOGOUT) {\n    Auth.signOut();\n    localStorage.removeItem('token');\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_ERROR) {\n    const status = params.status;\n\n    if (status === 401 || status === 403) {\n      Auth.signOut();\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n  }\n\n  return Promise.resolve();\n});","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/admin/src/services/auth-provider.js"],"names":["AUTH_LOGIN","AUTH_LOGOUT","AUTH_ERROR","AUTH_CHECK","Auth","type","params","username","password","signIn","then","response","status","Error","statusText","token","currentSession","idToken","jwtToken","localStorage","setItem","catch","error","console","log","message","signOut","removeItem","Promise","resolve","reject","getItem"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,EAAgDC,UAAhD,QAAkE,aAAlE;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,gBAAe,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,MAAID,IAAI,KAAKL,UAAb,EAAyB;AAAA,UACbO,QADa,GACUD,MADV,CACbC,QADa;AAAA,UACHC,QADG,GACUF,MADV,CACHE,QADG;AAGrB,WAAOJ,IAAI,CAACK,MAAL,CAAYF,QAAZ,EAAsBC,QAAtB,EACNE,IADM,CACDC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAlB,IAAyBD,QAAQ,CAACC,MAAT,IAAmB,GAAhD,EAAqD;AACjD,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACH;;AACD,aAAOH,QAAP;AACD,KANM,EAMJD,IANI,CAMC,YAAY;AAClB,YAAMK,KAAK,GAAG,CAAC,MAAMX,IAAI,CAACY,cAAL,EAAP,EAA8BC,OAA9B,CAAsCC,QAApD;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,KAA9B;AACH,KATQ,EASNM,KATM,CASAC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACF,YAAM,IAAIT,KAAJ,CAAUS,KAAK,CAACG,OAAhB,CAAN;AAEC,KAbM,CAAP;AAcH;;AACD,MAAIpB,IAAI,KAAKJ,WAAb,EAA0B;AACtBG,IAAAA,IAAI,CAACsB,OAAL;AACAP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,MAAIxB,IAAI,KAAKH,UAAb,EAAyB;AACrB,UAAMU,MAAM,GAAIN,MAAM,CAACM,MAAvB;;AACA,QAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AAClCR,MAAAA,IAAI,CAACsB,OAAL;AACAP,MAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACA,aAAOC,OAAO,CAACE,MAAR,EAAP;AACH;;AACD,WAAOF,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,MAAIxB,IAAI,KAAKF,UAAb,EAAyB;AACrB,WAAOgB,YAAY,CAACY,OAAb,CAAqB,OAArB,IAAgCH,OAAO,CAACC,OAAR,EAAhC,GAAoDD,OAAO,CAACE,MAAR,EAA3D;AACH;;AAED,SAAOF,OAAO,CAACC,OAAR,EAAP;AACH,CAtCD","sourcesContent":["import { AUTH_LOGIN,  AUTH_LOGOUT, AUTH_ERROR,  AUTH_CHECK } from 'react-admin';\nimport { Auth } from \"aws-amplify\";\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n\n        return Auth.signIn(username, password)\n        .then(response => {\n          if (response.status < 200 || response.status >= 300) {\n              throw new Error(response.statusText);\n          }\n          return response;\n        }).then(async () => {\n          const token = (await Auth.currentSession()).idToken.jwtToken\n          localStorage.setItem('token', token);\n      }).catch(error => {\n          console.log(\"Erro fazendo login: \", error);\n        throw new Error(error.message);\n\n        });\n    }\n    if (type === AUTH_LOGOUT) {\n        Auth.signOut()\n        localStorage.removeItem('token');\n        return Promise.resolve();\n    }\n    if (type === AUTH_ERROR) {\n        const status  = params.status;\n        if (status === 401 || status === 403) {\n            Auth.signOut()\n            localStorage.removeItem('token');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    }\n    \n    return Promise.resolve();\n}\n\n\n"]},"metadata":{},"sourceType":"module"}