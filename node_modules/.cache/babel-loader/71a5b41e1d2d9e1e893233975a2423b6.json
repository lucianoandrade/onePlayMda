{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { isValidElement, useEffect, useMemo } from 'react';\nimport inflection from 'inflection';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport useListParams from './useListParams';\nimport useRecordSelection from './useRecordSelection';\nimport useVersion from './useVersion';\nimport { useTranslate } from '../i18n';\nimport { SORT_ASC } from '../reducer/admin/resource/list/queryReducer';\nimport { CRUD_GET_LIST } from '../actions';\nimport { useNotify } from '../sideEffect';\nimport useQueryWithStore from '../dataProvider/useQueryWithStore';\nvar defaultSort = {\n  field: 'id',\n  order: SORT_ASC\n};\n/**\n * Prepare data for the List view\n *\n * @param {Object} props The props passed to the List component.\n *\n * @return {Object} controllerProps Fetched and computed data for the List view\n *\n * @example\n *\n * import { useListController } from 'react-admin';\n * import ListView from './ListView';\n *\n * const MyList = props => {\n *     const controllerProps = useListController(props);\n *     return <ListView {...controllerProps} {...props} />;\n * }\n */\n\nvar useListController = function (props) {\n  useCheckMinimumRequiredProps('List', ['basePath', 'location', 'resource'], props);\n  var basePath = props.basePath,\n      resource = props.resource,\n      hasCreate = props.hasCreate,\n      location = props.location,\n      filterDefaultValues = props.filterDefaultValues,\n      _a = props.sort,\n      sort = _a === void 0 ? defaultSort : _a,\n      _b = props.perPage,\n      perPage = _b === void 0 ? 10 : _b,\n      filter = props.filter,\n      _c = props.debounce,\n      debounce = _c === void 0 ? 500 : _c;\n\n  if (filter && isValidElement(filter)) {\n    throw new Error('<List> received a React element as `filter` props. If you intended to set the list filter elements, use the `filters` (with an s) prop instead. The `filter` prop is internal and should not be set by the developer.');\n  }\n\n  var translate = useTranslate();\n  var notify = useNotify();\n  var version = useVersion();\n\n  var _d = useListParams({\n    resource: resource,\n    location: location,\n    filterDefaultValues: filterDefaultValues,\n    sort: sort,\n    perPage: perPage,\n    debounce: debounce\n  }),\n      query = _d[0],\n      queryModifiers = _d[1];\n\n  var _e = useRecordSelection(resource),\n      selectedIds = _e[0],\n      selectionModifiers = _e[1];\n  /**\n   * We don't use useGetList() here because we want the list of ids to be\n   * always available for optimistic rendering, and therefore we need a\n   * custom action (CRUD_GET_LIST), a custom reducer for ids and total\n   * (admin.resources.[resource].list.ids and admin.resources.[resource].list.total)\n   * and a custom selector for these reducers.\n   * Also we don't want that calls to useGetList() in userland change\n   * the list of ids in the main List view.\n   */\n\n\n  var _f = useQueryWithStore({\n    type: 'getList',\n    resource: resource,\n    payload: {\n      pagination: {\n        page: query.page,\n        perPage: query.perPage\n      },\n      sort: {\n        field: query.sort,\n        order: query.order\n      },\n      filter: __assign({}, query.filter, filter)\n    }\n  }, {\n    action: CRUD_GET_LIST,\n    version: version,\n    onFailure: function (error) {\n      return notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n    }\n  }, function (state) {\n    return state.admin.resources[resource] ? state.admin.resources[resource].list.ids : null;\n  }, function (state) {\n    return state.admin.resources[resource] ? state.admin.resources[resource].list.total : null;\n  }),\n      ids = _f.data,\n      total = _f.total,\n      loading = _f.loading,\n      loaded = _f.loaded;\n\n  var data = useSelector(function (state) {\n    return state.admin.resources[resource] ? state.admin.resources[resource].data : null;\n  }, shallowEqual);\n  useEffect(function () {\n    if (query.page <= 0 || !loading && query.page > 1 && (ids || []).length === 0) {\n      // query for a page that doesn't exist, set page to 1\n      queryModifiers.setPage(1);\n    }\n  }, [loading, query.page, ids, queryModifiers]);\n  var currentSort = useMemo(function () {\n    return {\n      field: query.sort,\n      order: query.order\n    };\n  }, [query.sort, query.order]);\n  var resourceName = translate(\"resources.\" + resource + \".name\", {\n    smart_count: 2,\n    _: inflection.humanize(inflection.pluralize(resource))\n  });\n  var defaultTitle = translate('ra.page.list', {\n    name: resourceName\n  });\n  return {\n    basePath: basePath,\n    currentSort: currentSort,\n    data: data,\n    defaultTitle: defaultTitle,\n    displayedFilters: query.displayedFilters,\n    filterValues: query.filterValues,\n    hasCreate: hasCreate,\n    ids: ids,\n    loading: loading,\n    loaded: loaded,\n    onSelect: selectionModifiers.select,\n    onToggleItem: selectionModifiers.toggle,\n    onUnselectItems: selectionModifiers.clearSelection,\n    page: query.page,\n    perPage: query.perPage,\n    resource: resource,\n    selectedIds: selectedIds,\n    setFilters: queryModifiers.setFilters,\n    hideFilter: queryModifiers.hideFilter,\n    showFilter: queryModifiers.showFilter,\n    setPage: queryModifiers.setPage,\n    setPerPage: queryModifiers.setPerPage,\n    setSort: queryModifiers.setSort,\n    total: total,\n    version: version\n  };\n};\n\nexport var injectedProps = ['basePath', 'currentSort', 'data', 'defaultTitle', 'displayedFilters', 'filterValues', 'hasCreate', 'hideFilter', 'ids', 'loading', 'loaded', 'onSelect', 'onToggleItem', 'onUnselectItems', 'page', 'perPage', 'refresh', 'resource', 'selectedIds', 'setFilters', 'setPage', 'setPerPage', 'setSort', 'showFilter', 'total', 'version'];\n/**\n * Select the props injected by the useListController hook\n * to be passed to the List children need\n * This is an implementation of pick()\n */\n\nexport var getListControllerProps = function (props) {\n  return injectedProps.reduce(function (acc, key) {\n    var _a;\n\n    return __assign({}, acc, (_a = {}, _a[key] = props[key], _a));\n  }, {});\n};\n/**\n * Select the props not injected by the useListController hook\n * to be used inside the List children to sanitize props injected by List\n * This is an implementation of omit()\n */\n\nexport var sanitizeListRestProps = function (props) {\n  return Object.keys(props).filter(function (propName) {\n    return !injectedProps.includes(propName);\n  }).reduce(function (acc, key) {\n    var _a;\n\n    return __assign({}, acc, (_a = {}, _a[key] = props[key], _a));\n  }, {});\n};\nexport default useListController;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/admin/node_modules/ra-core/esm/controller/useListController.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isValidElement","useEffect","useMemo","inflection","useSelector","shallowEqual","useCheckMinimumRequiredProps","useListParams","useRecordSelection","useVersion","useTranslate","SORT_ASC","CRUD_GET_LIST","useNotify","useQueryWithStore","defaultSort","field","order","useListController","props","basePath","resource","hasCreate","location","filterDefaultValues","_a","sort","_b","perPage","filter","_c","debounce","Error","translate","notify","version","_d","query","queryModifiers","_e","selectedIds","selectionModifiers","_f","type","payload","pagination","page","action","onFailure","error","message","state","admin","resources","list","ids","total","data","loading","loaded","setPage","currentSort","resourceName","smart_count","_","humanize","pluralize","defaultTitle","name","displayedFilters","filterValues","onSelect","select","onToggleItem","toggle","onUnselectItems","clearSelection","setFilters","hideFilter","showFilter","setPerPage","setSort","injectedProps","getListControllerProps","reduce","acc","key","sanitizeListRestProps","keys","propName","includes"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isValidElement, useEffect, useMemo } from 'react';\nimport inflection from 'inflection';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport useListParams from './useListParams';\nimport useRecordSelection from './useRecordSelection';\nimport useVersion from './useVersion';\nimport { useTranslate } from '../i18n';\nimport { SORT_ASC } from '../reducer/admin/resource/list/queryReducer';\nimport { CRUD_GET_LIST } from '../actions';\nimport { useNotify } from '../sideEffect';\nimport useQueryWithStore from '../dataProvider/useQueryWithStore';\nvar defaultSort = {\n    field: 'id',\n    order: SORT_ASC,\n};\n/**\n * Prepare data for the List view\n *\n * @param {Object} props The props passed to the List component.\n *\n * @return {Object} controllerProps Fetched and computed data for the List view\n *\n * @example\n *\n * import { useListController } from 'react-admin';\n * import ListView from './ListView';\n *\n * const MyList = props => {\n *     const controllerProps = useListController(props);\n *     return <ListView {...controllerProps} {...props} />;\n * }\n */\nvar useListController = function (props) {\n    useCheckMinimumRequiredProps('List', ['basePath', 'location', 'resource'], props);\n    var basePath = props.basePath, resource = props.resource, hasCreate = props.hasCreate, location = props.location, filterDefaultValues = props.filterDefaultValues, _a = props.sort, sort = _a === void 0 ? defaultSort : _a, _b = props.perPage, perPage = _b === void 0 ? 10 : _b, filter = props.filter, _c = props.debounce, debounce = _c === void 0 ? 500 : _c;\n    if (filter && isValidElement(filter)) {\n        throw new Error('<List> received a React element as `filter` props. If you intended to set the list filter elements, use the `filters` (with an s) prop instead. The `filter` prop is internal and should not be set by the developer.');\n    }\n    var translate = useTranslate();\n    var notify = useNotify();\n    var version = useVersion();\n    var _d = useListParams({\n        resource: resource,\n        location: location,\n        filterDefaultValues: filterDefaultValues,\n        sort: sort,\n        perPage: perPage,\n        debounce: debounce,\n    }), query = _d[0], queryModifiers = _d[1];\n    var _e = useRecordSelection(resource), selectedIds = _e[0], selectionModifiers = _e[1];\n    /**\n     * We don't use useGetList() here because we want the list of ids to be\n     * always available for optimistic rendering, and therefore we need a\n     * custom action (CRUD_GET_LIST), a custom reducer for ids and total\n     * (admin.resources.[resource].list.ids and admin.resources.[resource].list.total)\n     * and a custom selector for these reducers.\n     * Also we don't want that calls to useGetList() in userland change\n     * the list of ids in the main List view.\n     */\n    var _f = useQueryWithStore({\n        type: 'getList',\n        resource: resource,\n        payload: {\n            pagination: {\n                page: query.page,\n                perPage: query.perPage,\n            },\n            sort: { field: query.sort, order: query.order },\n            filter: __assign({}, query.filter, filter),\n        },\n    }, {\n        action: CRUD_GET_LIST,\n        version: version,\n        onFailure: function (error) {\n            return notify(typeof error === 'string'\n                ? error\n                : error.message || 'ra.notification.http_error', 'warning');\n        },\n    }, function (state) {\n        return state.admin.resources[resource]\n            ? state.admin.resources[resource].list.ids\n            : null;\n    }, function (state) {\n        return state.admin.resources[resource]\n            ? state.admin.resources[resource].list.total\n            : null;\n    }), ids = _f.data, total = _f.total, loading = _f.loading, loaded = _f.loaded;\n    var data = useSelector(function (state) {\n        return state.admin.resources[resource]\n            ? state.admin.resources[resource].data\n            : null;\n    }, shallowEqual);\n    useEffect(function () {\n        if (query.page <= 0 ||\n            (!loading && query.page > 1 && (ids || []).length === 0)) {\n            // query for a page that doesn't exist, set page to 1\n            queryModifiers.setPage(1);\n        }\n    }, [loading, query.page, ids, queryModifiers]);\n    var currentSort = useMemo(function () { return ({\n        field: query.sort,\n        order: query.order,\n    }); }, [query.sort, query.order]);\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n        smart_count: 2,\n        _: inflection.humanize(inflection.pluralize(resource)),\n    });\n    var defaultTitle = translate('ra.page.list', {\n        name: resourceName,\n    });\n    return {\n        basePath: basePath,\n        currentSort: currentSort,\n        data: data,\n        defaultTitle: defaultTitle,\n        displayedFilters: query.displayedFilters,\n        filterValues: query.filterValues,\n        hasCreate: hasCreate,\n        ids: ids,\n        loading: loading,\n        loaded: loaded,\n        onSelect: selectionModifiers.select,\n        onToggleItem: selectionModifiers.toggle,\n        onUnselectItems: selectionModifiers.clearSelection,\n        page: query.page,\n        perPage: query.perPage,\n        resource: resource,\n        selectedIds: selectedIds,\n        setFilters: queryModifiers.setFilters,\n        hideFilter: queryModifiers.hideFilter,\n        showFilter: queryModifiers.showFilter,\n        setPage: queryModifiers.setPage,\n        setPerPage: queryModifiers.setPerPage,\n        setSort: queryModifiers.setSort,\n        total: total,\n        version: version,\n    };\n};\nexport var injectedProps = [\n    'basePath',\n    'currentSort',\n    'data',\n    'defaultTitle',\n    'displayedFilters',\n    'filterValues',\n    'hasCreate',\n    'hideFilter',\n    'ids',\n    'loading',\n    'loaded',\n    'onSelect',\n    'onToggleItem',\n    'onUnselectItems',\n    'page',\n    'perPage',\n    'refresh',\n    'resource',\n    'selectedIds',\n    'setFilters',\n    'setPage',\n    'setPerPage',\n    'setSort',\n    'showFilter',\n    'total',\n    'version',\n];\n/**\n * Select the props injected by the useListController hook\n * to be passed to the List children need\n * This is an implementation of pick()\n */\nexport var getListControllerProps = function (props) {\n    return injectedProps.reduce(function (acc, key) {\n        var _a;\n        return (__assign({}, acc, (_a = {}, _a[key] = props[key], _a)));\n    }, {});\n};\n/**\n * Select the props not injected by the useListController hook\n * to be used inside the List children to sanitize props injected by List\n * This is an implementation of omit()\n */\nexport var sanitizeListRestProps = function (props) {\n    return Object.keys(props)\n        .filter(function (propName) { return !injectedProps.includes(propName); })\n        .reduce(function (acc, key) {\n        var _a;\n        return (__assign({}, acc, (_a = {}, _a[key] = props[key], _a)));\n    }, {});\n};\nexport default useListController;\n"]},"metadata":{},"sourceType":"module"}